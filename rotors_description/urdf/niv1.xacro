<?xml version="1.0"?>
<!--
  Copyright 2015 Fadri Furrer, ASL, ETH Zurich, Switzerland
  Copyright 2015 Michael Burri, ASL, ETH Zurich, Switzerland
  Copyright 2015 Mina Kamel, ASL, ETH Zurich, Switzerland
  Copyright 2015 Janosch Nikolic, ASL, ETH Zurich, Switzerland
  Copyright 2015 Markus Achtelik, ASL, ETH Zurich, Switzerland

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<robot name="niv1" xmlns:xacro="http://ros.org/wiki/xacro">
  <!-- Properties -->
  <xacro:property name="namespace" value="$(arg namespace)" />
  <xacro:property name="rotor_velocity_slowdown_sim" value="30" />
  <xacro:property name="use_mesh_file" value="true" />
  <xacro:property name="mesh_file" value="package://rotors_description/meshes/niv1_body.dae" />
  <xacro:property name="mass" value="12" /> <!-- [kg] -->
  <xacro:property name="body_width" value="0.2" /> <!-- [m] -->
  <xacro:property name="body_height" value="0.3" /> <!-- [m] -->
  <xacro:property name="mass_rotor" value="0.2" /> <!-- [kg] -->
  <xacro:property name="arm_length" value="0.636" /> <!-- [m] -->
  <xacro:property name="rotor_offset_top" value="0.053" /> <!-- [m] -->
  <xacro:property name="support_offset_top" value="-0.12" /> <!-- [m] -->
  <xacro:property name="cmarker_offset_top" value="0.018" /> <!-- [m] -->
  
  <xacro:property name="radius_rotor" value="0.3" /> <!-- [m] -->

  <xacro:property name="motor_constant_for_ros_sim" value="8.54858e-05" /> <!-- [kg m/s^2]  force = real_motor_velocity * real_motor_velocity * motor_constant_-->
  <xacro:property name="motor_constant" value="1.2e-04" /> <!-- [kg m/s^2]  force = real_motor_velocity * real_motor_velocity * motor_constant_-->
  
  <xacro:property name="moment_constant_org" value="0.025" /> <!-- [m] math::Vector3 drag_torque(0, 0, -turning_direction_ * force * moment_constant_); -->
  <xacro:property name="moment_constant" value="0.025" /> <!-- [m] math::Vector3 drag_torque(0, 0, -turning_direction_ * force * moment_constant_); -->
  
  <xacro:property name="time_constant_up" value="0.00125" /> <!-- [s] -->
  <xacro:property name="time_constant_down" value="0.0025" /> <!-- [s] -->
  
  <xacro:property name="max_rot_velocity" value="1838" /> <!-- [rad/s] -->
  
  <xacro:property name="rotor_pos_x" value="0.45" />
  <xacro:property name="rotor_pos_y" value="0.45" />  

  <xacro:property name="rotor_drag_coefficient" value="8.06428e-05" /> <!-- math::Vector3 air_drag = -std::abs(real_motor_velocity) * rotor_drag_coefficient_ * body_velocity_perpendicular; -->
  
  <xacro:property name="rolling_moment_coefficient" value="0.000001" /> <!-- math::Vector3 rolling_moment = -std::abs(real_motor_velocity) * rolling_moment_coefficient_ * body_velocity_perpendicular; -->

  <xacro:property name="angular_air_resistance" value="0.015" />
  <xacro:property name="linear_air_resistance" value="0.001" />
  <!-- Property Blocks -->
  <xacro:property name="body_inertia">
    <!--
    <inertia ixx="0.0347563" ixy="0.0" ixz="0.0" iyy="0.0458929" iyz="0.0" izz="0.0977" /> [kg m^2] [kg m^2] [kg m^2] [kg m^2] [kg m^2] [kg m^2] -->
    <inertia ixx="0.801" ixy="0.0" ixz="0.0" iyy="0.827" iyz="0.0" izz="1.450" />
  </xacro:property>

  <!-- inertia of a single rotor, assuming it is a cuboid. -->
  <xacro:property name="rotor_inertia">
    <!-- <xacro:box_inertia x="${radius_rotor}" y="0.015" z="0.003" mass="${mass_rotor*rotor_velocity_slowdown_sim}" /> -->
    <xacro:box_inertia x="${radius_rotor}" y="0.015" z="0.003" mass="${mass_rotor*rotor_velocity_slowdown_sim}" /> 
  </xacro:property>

  <xacro:property name="support_inertia">
    <!-- <xacro:box_inertia x="${radius_rotor}" y="0.015" z="0.003" mass="${mass_rotor*rotor_velocity_slowdown_sim}" /> -->
    <xacro:box_inertia x="0.03" y="0.03" z="0.2" mass="0.001" /> 
  </xacro:property>

  <xacro:property name="cmarker_inertia">
    <!-- <xacro:box_inertia x="${radius_rotor}" y="0.015" z="0.003" mass="${mass_rotor*rotor_velocity_slowdown_sim}" /> -->
    <xacro:box_inertia x="0.03" y="0.03" z="0.2" mass="0.001" /> 
  </xacro:property>

  <!-- Included URDF Files -->
  <xacro:include filename="$(find rotors_description)/urdf/multirotor_base.xacro" />

  <!-- Instantiate multirotor_base_macro once -->
  <xacro:multirotor_base_macro
    robot_namespace="${namespace}"
    mass="${mass}"
    body_width="${body_width}"
    body_height="${body_height}"
    use_mesh_file="${use_mesh_file}"
    mesh_file="${mesh_file}"
    >
    <xacro:insert_block name="body_inertia" />
  </xacro:multirotor_base_macro>

  <!-- Instantiate rotors -->
    <xacro:vertical_rotor
    robot_namespace="${namespace}"
    suffix="front_right"
    direction="ccw"
    motor_constant="${motor_constant}"
    moment_constant="${moment_constant}"
    parent="${namespace}/base_link"
    mass_rotor="${mass_rotor}"
    radius_rotor="${radius_rotor}"
    time_constant_up="${time_constant_up}"
    time_constant_down="${time_constant_down}"
    max_rot_velocity="${max_rot_velocity}"
    motor_number="0"
    rotor_drag_coefficient="${rotor_drag_coefficient}"
    rolling_moment_coefficient="${rolling_moment_coefficient}"
    color="Grey"
    use_own_mesh="false"
    mesh="">
     <origin xyz="${rotor_pos_x} -${rotor_pos_y} ${rotor_offset_top}" rpy="0 0 0" />
    <xacro:insert_block name="rotor_inertia" />
  </xacro:vertical_rotor>


  <xacro:vertical_rotor
    robot_namespace="${namespace}"
    suffix="front_left"
    direction="cw"
    motor_constant="${motor_constant}"
    moment_constant="${moment_constant}"
    parent="${namespace}/base_link"
    mass_rotor="${mass_rotor}"
    radius_rotor="${radius_rotor}"
    time_constant_up="${time_constant_up}"
    time_constant_down="${time_constant_down}"
    max_rot_velocity="${max_rot_velocity}"
    motor_number="1"
    rotor_drag_coefficient="${rotor_drag_coefficient}"
    rolling_moment_coefficient="${rolling_moment_coefficient}"
    color="Grey"
    use_own_mesh="false"
    mesh="">
    <origin xyz="${rotor_pos_x} ${rotor_pos_y} ${rotor_offset_top}" rpy="0 0 0" />
    <xacro:insert_block name="rotor_inertia" />
  </xacro:vertical_rotor>

  
  <xacro:vertical_rotor robot_namespace="${namespace}"
    suffix="back_left"
    direction="ccw"
    motor_constant="${motor_constant}"
    moment_constant="${moment_constant}"
    parent="${namespace}/base_link"
    mass_rotor="${mass_rotor}"
    radius_rotor="${radius_rotor}"
    time_constant_up="${time_constant_up}"
    time_constant_down="${time_constant_down}"
    max_rot_velocity="${max_rot_velocity}"
    motor_number="2"
    rotor_drag_coefficient="${rotor_drag_coefficient}"
    rolling_moment_coefficient="${rolling_moment_coefficient}"
    color="Grey"
    use_own_mesh="false"
    mesh="">
    <origin xyz="-${rotor_pos_x} ${rotor_pos_y} ${rotor_offset_top}" rpy="0 0 0" />
    <xacro:insert_block name="rotor_inertia" />
  </xacro:vertical_rotor>

  <xacro:vertical_rotor robot_namespace="${namespace}"
    suffix="back_right"
    direction="cw"
    motor_constant="${motor_constant}"
    moment_constant="${moment_constant}"
    parent="${namespace}/base_link"
    mass_rotor="${mass_rotor}"
    radius_rotor="${radius_rotor}"
    time_constant_up="${time_constant_up}"
    time_constant_down="${time_constant_down}"
    max_rot_velocity="${max_rot_velocity}"
    motor_number="3"
    rotor_drag_coefficient="${rotor_drag_coefficient}"
    rolling_moment_coefficient="${rolling_moment_coefficient}"
    color="Grey"
    use_own_mesh="false"
    mesh="">
    <origin xyz="-${rotor_pos_x} -${rotor_pos_y} ${rotor_offset_top}" rpy="0 0 0" />
    <xacro:insert_block name="rotor_inertia" />
  </xacro:vertical_rotor>

 <!-- Instantiate support -->
    <xacro:support
    robot_namespace="${namespace}"
    suffix="front_right"
    parent="${namespace}/base_link"
    support_number="0"
    color="Grey">
     <origin xyz="${rotor_pos_x} -${rotor_pos_y} ${support_offset_top}" rpy="0 0 0" />
    <xacro:insert_block name="support_inertia" />
  </xacro:support>

  <xacro:support
    robot_namespace="${namespace}"
    suffix="front_left"
    parent="${namespace}/base_link"
    support_number="1"
    color="Grey">
    <origin xyz="${rotor_pos_x} ${rotor_pos_y} ${support_offset_top}" rpy="0 0 0" />
    <xacro:insert_block name="support_inertia" />
  </xacro:support>
  
  <xacro:support robot_namespace="${namespace}"
    suffix="back_left"
    parent="${namespace}/base_link"
    support_number="2"
    color="Grey">
    <origin xyz="-${rotor_pos_x} ${rotor_pos_y} ${support_offset_top}" rpy="0 0 0" />
    <xacro:insert_block name="support_inertia" />
  </xacro:support>

  <xacro:support robot_namespace="${namespace}"
    suffix="back_right"
    parent="${namespace}/base_link"
    support_number="3"
    color="Grey">
    <origin xyz="-${rotor_pos_x} -${rotor_pos_y} ${support_offset_top}" rpy="0 0 0" />
    <xacro:insert_block name="support_inertia" />
  </xacro:support>

 <!-- Instantiate cylinder marker -->
    <xacro:cmarker
    robot_namespace="${namespace}"
    suffix="front_right"
    parent="${namespace}/base_link"
    cmarker_number="0"
    color="Red">
    <origin xyz="${rotor_pos_x/2} -${rotor_pos_y} ${cmarker_offset_top}" rpy="0 ${pi/2} 0" />
    <xacro:insert_block name="cmarker_inertia" />
  </xacro:cmarker>

  <xacro:cmarker
    robot_namespace="${namespace}"
    suffix="front_left"
    parent="${namespace}/base_link"
    cmarker_number="1"
    color="Red">
    <origin xyz="${rotor_pos_x/2} ${rotor_pos_y} ${cmarker_offset_top}" rpy="0 ${pi/2} 0" />
    <xacro:insert_block name="cmarker_inertia" />
  </xacro:cmarker>
  
  <xacro:cmarker robot_namespace="${namespace}"
    suffix="back_left"
    parent="${namespace}/base_link"
    cmarker_number="2"
    color="White">
    <origin xyz="-${rotor_pos_x/2} ${rotor_pos_y} ${cmarker_offset_top}" rpy="0 ${pi/2} 0" />
    <xacro:insert_block name="cmarker_inertia" />
  </xacro:cmarker>

  <xacro:cmarker robot_namespace="${namespace}"
    suffix="back_right"
    parent="${namespace}/base_link"
    cmarker_number="3"
    color="White">
    <origin xyz="-${rotor_pos_x/2} -${rotor_pos_y} ${cmarker_offset_top}" rpy="0 ${pi/2} 0" />
    <xacro:insert_block name="cmarker_inertia" />
  </xacro:cmarker>


</robot>
