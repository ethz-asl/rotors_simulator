<launch>

<!-- arg -->
<arg name="world_name" default="basic"/> <!-- basic world is opened-->
<arg name="enable_logging" default="false"/>
<arg name="enable_ground_truth" default="true"/>

<arg name="mav_name" default="hummingbird"/>
<arg name="uav_name" default="hummingbird"/> <!-- mav oder uav?, hcrane instead of techpod-->
<arg name="log_file" default="$(arg mav_name)"/> 
<arg name="debug" value="false" />  <!-- start gzserver in debug mode using gdb-->
<arg name="paused" value="true" />  <!-- start gazebo in paused state-->
<arg name="gui" value="true" />  <!-- launch user interface window of gazebo-->
<arg name="verbose" value="false"/> 

<!-- env (applies only to nodes declared after)
<env name="GAZEBO_MODEL_PATH" value="${GAZEBO_MODEL_PATH}:$(find rotors_gazebo)/models"/>
<env name="GAZEBO_RESOURCE_PATH" value="${GAZEBO_RESOURCE_PATH}:$(find rotors_gazebo)/models"/>
-->


<!-- inlclude files, arg has to be defined above first-->
<!-- include world-->
<include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find rotors_gazebo)/worlds/$(arg world_name).world"/>
    <arg name="debug" value="$(arg debug)" />  <!-- start gzserver in debug mode using gdb-->
    <arg name="paused" value="$(arg paused)" />  <!-- start gazebo in paused state-->
    <arg name="gui" value="$(arg gui)" />  <!-- launch user interface window of gazebo-->
    <arg name="verbose" value="$(arg verbose)"/> 
<!-- use_sim_time, headless-->
</include>

<!-- include drone-->
  <group ns="$(arg mav_name)">
    <include file="$(find rotors_gazebo)/launch/spawn_mav.launch"> <!-- hcrane.launch-->
      
      <arg name="mav_name" value="$(arg mav_name)" />
      <arg name="model" value="$(find rotors_description)/urdf/mav_generic_odometry_sensor.gazebo" /> <!-- name.gazbo -->
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="$(arg mav_name)"/>
      
      <arg name="y" value="0.0"/>
    </include>
    <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_hummingbird.yaml" /> <!-- name.gazbo -->
      <rosparam command="load" file="$(find rotors_gazebo)/resource/hummingbird.yaml" /> <!-- name.gazbo -->
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
    <node name="waypoint_publisher" pkg="rotors_gazebo" type="waypoint_publisher" output="screen" args="0 0 1 0 5"/>
  </group>



</launch>